// Code generated by protoc-gen-go.
// source: instruction.proto
// DO NOT EDIT!

package proto

import proto1 "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

type Instruction struct {
	Type  *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// only used if we are an import and we're all linked into an Transform
	ObjectId  *int32         `protobuf:"varint,3,opt,name=object_id" json:"object_id,omitempty"`
	Children  []*Instruction `protobuf:"bytes,4,rep,name=children" json:"children,omitempty"`
	Arguments []*Instruction `protobuf:"bytes,5,rep,name=arguments" json:"arguments,omitempty"`
	// Linked: Function Reference
	// Until this happens, value says the function call name
	FunctionId       *int32 `protobuf:"varint,6,opt,name=function_id" json:"function_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Instruction) Reset()         { *m = Instruction{} }
func (m *Instruction) String() string { return proto1.CompactTextString(m) }
func (*Instruction) ProtoMessage()    {}

func (m *Instruction) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Instruction) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Instruction) GetObjectId() int32 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *Instruction) GetChildren() []*Instruction {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Instruction) GetArguments() []*Instruction {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *Instruction) GetFunctionId() int32 {
	if m != nil && m.FunctionId != nil {
		return *m.FunctionId
	}
	return 0
}

func init() {
}
